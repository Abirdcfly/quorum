// Code generated by MockGen. DO NOT EDIT.
// Source: contract_indexer.go

// Package multitenancy is a generated GoMock package.
package multitenancy

import (
	reflect "reflect"

	common "github.com/ethereum/go-ethereum/common"
	gomock "github.com/golang/mock/gomock"
)

// MockContractIndexWriter is a mock of ContractIndexWriter interface.
type MockContractIndexWriter struct {
	ctrl     *gomock.Controller
	recorder *MockContractIndexWriterMockRecorder
}

// MockContractIndexWriterMockRecorder is the mock recorder for MockContractIndexWriter.
type MockContractIndexWriterMockRecorder struct {
	mock *MockContractIndexWriter
}

// NewMockContractIndexWriter creates a new mock instance.
func NewMockContractIndexWriter(ctrl *gomock.Controller) *MockContractIndexWriter {
	mock := &MockContractIndexWriter{ctrl: ctrl}
	mock.recorder = &MockContractIndexWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockContractIndexWriter) EXPECT() *MockContractIndexWriterMockRecorder {
	return m.recorder
}

// WriteIndex mocks base method.
func (m *MockContractIndexWriter) WriteIndex(contractAddress common.Address, contractParties *ContractIndexItem) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteIndex", contractAddress, contractParties)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteIndex indicates an expected call of WriteIndex.
func (mr *MockContractIndexWriterMockRecorder) WriteIndex(contractAddress, contractParties interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteIndex", reflect.TypeOf((*MockContractIndexWriter)(nil).WriteIndex), contractAddress, contractParties)
}

// MockContractIndexReader is a mock of ContractIndexReader interface.
type MockContractIndexReader struct {
	ctrl     *gomock.Controller
	recorder *MockContractIndexReaderMockRecorder
}

// MockContractIndexReaderMockRecorder is the mock recorder for MockContractIndexReader.
type MockContractIndexReaderMockRecorder struct {
	mock *MockContractIndexReader
}

// NewMockContractIndexReader creates a new mock instance.
func NewMockContractIndexReader(ctrl *gomock.Controller) *MockContractIndexReader {
	mock := &MockContractIndexReader{ctrl: ctrl}
	mock.recorder = &MockContractIndexReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockContractIndexReader) EXPECT() *MockContractIndexReaderMockRecorder {
	return m.recorder
}

// ReadIndex mocks base method.
func (m *MockContractIndexReader) ReadIndex(contractAddress common.Address) (*ContractIndexItem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadIndex", contractAddress)
	ret0, _ := ret[0].(*ContractIndexItem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadIndex indicates an expected call of ReadIndex.
func (mr *MockContractIndexReaderMockRecorder) ReadIndex(contractAddress interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadIndex", reflect.TypeOf((*MockContractIndexReader)(nil).ReadIndex), contractAddress)
}
