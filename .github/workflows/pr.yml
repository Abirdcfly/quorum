name: Pull Request Check
on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - .gitignore
  push:
    branches:
      - 'consensysengineering-privacy-support-using-precompile-v2-merge-temp'
env:
  GO_VERSION: 1.15.5
jobs:
  lint:
    name: 'Code linters'
    runs-on: ubuntu-18.04
    steps:
      - name: 'Setup Go ${{ env.GO_VERSION }}'
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: 'Check out project files'
        uses: actions/checkout@v2
        with:
          submodules: false
      - name: 'Prepare environment'
        run: |
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: 'Run code linters'
        run: |
          GO111MODULE=on make lint
  unit-tests:
    name: 'Unit tests in ${{ matrix.os }}'
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-18.04"]
    env:
      QUORUM_IGNORE_TEST_PACKAGES: github.com/ethereum/go-ethereum/les,github.com/ethereum/go-ethereum/les/flowcontrol,github.com/ethereum/go-ethereum/mobile
    runs-on: ${{ matrix.os }}
    steps:
      - name: 'Setup Go ${{ env.GO_VERSION }}'
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: 'Check out project files'
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: 'Prepare environment'
        run: |
          # https://github.com/actions/virtual-environments/issues/798
          sudo ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf

          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: 'Run unit tests'
        run: |
          make test
  docker-build:
    name: 'Build Docker image'
    runs-on: ubuntu-18.04
    steps:
      - name: 'Check out project files'
        uses: actions/checkout@v2
      - name: 'Build docker image'
        id: build
        run: |
          output_dir=${{ runner.temp }}/docker
          mkdir -p $output_dir
          docker build -t quorumengineering/quorum:pr .
          docker save quorumengineering/quorum:pr > quorum-pr.tar
          tar cfvz $output_dir/quorum-pr.tar.gz quorum-pr.tar
          echo "::set-output name=output_dir::$output_dir"
      - name: 'Upload workflow artifact - Docker image'
        uses: actions/upload-artifact@v1
        with:
          name: docker-image
          path: ${{ steps.build.outputs.output_dir }}
  acceptance-tests:
    name: Test (${{ matrix.tag }}) (privacy-enhancements=${{matrix.privacy-enhancements}}, quorum-precompiles-v1=${{matrix.quorum-precompiles-v1}}, privacy-marker-transactions=${{matrix.privacy-marker-transactions}})
    needs:
      - docker-build
    if: success()
    strategy:
      fail-fast: false
      matrix:
        # list of tag expression being executed in parallel
        # for PR, only selective tests are run.
        # More comprehensive suites are scheduled to run in master
        tag:
          - 'basic || basic-raft || (advanced && raft) || networks/typical::raft'
          - 'basic || basic-istanbul || (advanced && istanbul) || networks/typical::istanbul'
          - 'gcmode && block-sync && networks/template::raft-3plus1'
          - 'gcmode && block-sync && networks/template::istanbul-3plus1'
          - 'learner-peer-management || raftdnsenable && networks/template::raft-3plus1'
          - 'validator-management && networks/template::istanbul-3plus1'
          - 'basic || basic-raft || (advanced && raft) || networks/plugins::raft'
          - 'basic || basic-istanbul || (advanced && istanbul) || networks/plugins::istanbul'
          - 'basic || basic-raft || (advanced && raft) || networks/plugins::raft-account-plugin-hashicorp-vault'
          - 'basic || basic-istanbul || (advanced && istanbul) || networks/plugins::istanbul-account-plugin-hashicorp-vault'
          - 'basic-rpc-security || networks/plugins::raft-rpc-security'
          - 'basic-rpc-security || networks/plugins::istanbul-rpc-security'
          - 'migration && networks/template::raft-4nodes'
          - 'migration && networks/template::istanbul-4nodes'
          - 'migration && networks/template::raft-4nodes-ancientdb'
          - 'migration && networks/template::istanbul-4nodes-ancientdb'
          - 'permissions-v1 && networks/template::raft-3plus1'
          - 'permissions-v2 && networks/template::raft-3plus1'
          - 'privacy-enhancements-upgrade || networks/template::raft-4nodes-pe'
          - 'privacy-enhancements-upgrade || networks/template::istanbul-4nodes-pe'
          - 'multitenancy && networks/plugins::raft-multitenancy'
          - 'basic || basic-raft || (advanced && raft) || networks/typical::raft-simple-mps'
          - 'basic || basic-istanbul || (advanced && istanbul) || networks/typical::istanbul-simple-mps'
          - 'basic || networks/typical::raftmps'
          - 'basic || networks/typical::istanbulmps'
          - 'mps-upgrade-txtrace || networks/template::raft-4nodes-mps'
          - 'mps-upgrade-txtrace || networks/template::istanbul-4nodes-mps'
          - '(basic && !nosupport && !mps && !spam && !eth-api-signed && !privacy-enhancements-disabled && !graphql && !async && !extension && !storage-root && !get-quorum-payload && !personal-api-signed) || networks/typical-besu::ibft2'
        privacy-enhancements: [ false ]
        quorum-precompiles-v1: [ false, true ]
        privacy-marker-transactions: [ false ]
        include:
          - tag: '(basic && !privacy-enhancements-disabled) || privacy-enhancements || basic-raft || (advanced && raft) || networks/typical::raft'
            privacy-enhancements: true
            quorum-precompiles-v1: false
            privacy-marker-transactions: false
          - tag: '(basic && !privacy-enhancements-disabled) || privacy-enhancements || basic-istanbul || (advanced && istanbul) || networks/typical::istanbul'
            privacy-enhancements: true
            quorum-precompiles-v1: false
            privacy-marker-transactions: false
          - tag: '(basic && !privacy-enhancements-disabled && !privacy-precompile-disabled) || privacy-enhancements || privacy-precompile-enabled || basic-raft || (advanced && raft) || networks/typical::raft'
            privacy-enhancements: true
            quorum-precompiles-v1: true
            privacy-marker-transactions: true
          - tag: '(basic && !privacy-enhancements-disabled && !privacy-precompile-disabled) || privacy-enhancements || privacy-precompile-enabled || basic-istanbul || (advanced && istanbul) || networks/typical::istanbul'
            privacy-enhancements: true
            quorum-precompiles-v1: true
            privacy-marker-transactions: true
          - tag: '(basic && !privacy-precompile-disabled) || privacy-precompile-enabled || basic-raft || (advanced && raft) || networks/typical::raft'
            privacy-enhancements: false
            quorum-precompiles-v1: true
            privacy-marker-transactions: true
          - tag: '(basic && !privacy-precompile-disabled) || privacy-precompile-enabled || basic-istanbul || (advanced && istanbul) || networks/typical::istanbul'
            privacy-enhancements: false
            quorum-precompiles-v1: true
            privacy-marker-transactions: true
          - tag: '(basic && !privacy-precompile-disabled) || privacy-precompile-enabled || basic-raft || (advanced && raft) || networks/plugins::raft'
            privacy-enhancements: false
            quorum-precompiles-v1: true
            privacy-marker-transactions: true
          - tag: '(basic && !privacy-precompile-disabled) || privacy-precompile-enabled || basic-istanbul || (advanced && istanbul) || networks/plugins::istanbul'
            privacy-enhancements: false
            quorum-precompiles-v1: true
            privacy-marker-transactions: true
          - tag: '(basic && !privacy-precompile-disabled) || privacy-precompile-enabled || basic-raft || (advanced && raft) || networks/plugins::raft-account-plugin-hashicorp-vault'
            privacy-enhancements: false
            quorum-precompiles-v1: true
            privacy-marker-transactions: true
          - tag: '(basic && !privacy-precompile-disabled) || privacy-precompile-enabled || basic-istanbul || (advanced && istanbul) || networks/plugins::istanbul-account-plugin-hashicorp-vault'
            privacy-enhancements: false
            quorum-precompiles-v1: true
            privacy-marker-transactions: true
          - tag: '(multitenancy || privacy-precompile-enabled) && networks/plugins::raft-multitenancy'
            privacy-enhancements: false
            quorum-precompiles-v1: true
            privacy-marker-transactions: true
    runs-on: ubuntu-18.04
    steps:
      - name: 'Download workflow artifact - Docker image'
        uses: actions/download-artifact@v1
        with:
          name: docker-image
      - name: 'Load Docker image'
        id: setup
        run: |
          tar xfvz docker-image/quorum-pr.tar.gz
          docker load --input quorum-pr.tar
          docker_env_file="${{ runner.temp }}/env.list"
          echo "TF_VAR_quorum_docker_image={ name = \"quorumengineering/quorum:pr\", local = true }" >> $docker_env_file
          echo "::set-output name=outputDir::${{ runner.temp }}"
          echo "::set-output name=dockerEnvFile::$docker_env_file"
      # START: remove the below once PR is ready
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: quorumbot
          password: ${{ secrets.QUORUMBOT_PAT }}
      - name: 'Load AccTests and Tessera Docker Images'
        run: |
          tessera_docker_image="quorumengineering/tessera:develop"
          acctests_docker_image="docker.pkg.github.com/consensysquorum/quorum-acceptance-tests/acctests:dev-privacy-precompile"
          docker pull $tessera_docker_image
          echo "TF_VAR_tessera_docker_image={ name = \"$tessera_docker_image\", local = true }" >> ${{ steps.setup.outputs.dockerEnvFile }}
          echo "TF_VAR_privacy_enhancements={ block = 0, enabled = ${{ matrix.privacy-enhancements}} }" >> ${{ steps.setup.outputs.dockerEnvFile }}
          echo "TF_VAR_quorum_precompiles_v1={ block = 0, enabled = ${{ matrix.quorum-precompiles-v1}} }" >> ${{ steps.setup.outputs.dockerEnvFile }}
          echo "TF_VAR_privacy_marker_transactions=${{ matrix.privacy-marker-transactions}}" >> ${{ steps.setup.outputs.dockerEnvFile }}
          docker pull $acctests_docker_image
          # replacing the acctests image to run
          docker tag $acctests_docker_image quorumengineering/acctests:latest
      # END
      - name: 'Run acceptance tests'
        run: |
          cat ${{ steps.setup.outputs.dockerEnvFile }}
          docker run --rm \
            --network host \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v ${{ steps.setup.outputs.outputDir }}:${{ steps.setup.outputs.outputDir  }} \
            --env-file ${{ steps.setup.outputs.dockerEnvFile }} \
            quorumengineering/acctests:latest test \
              -Pauto \
              -Dauto.outputDir=${{ steps.setup.outputs.outputDir  }} \
              -Dtags="${{ matrix.tag }}"
      - name: 'Debug'
        if: always()
        run: |
          echo "docker images"
          docker images
          echo "docker ps -a"
          docker ps -a

#          mkdir docker-logs
#          IFS=$'\n'
#          for CONTAINER in $(docker ps -a --format {{.Names}})
#          do
#            echo "writing logs for $CONTAINER"
#          	docker logs $CONTAINER > docker-logs/$CONTAINER.log 2>&1
#          done
#      - name: 'Upload logs'
#        if: always()
#        uses: actions/upload-artifact@v2
#        with:
#          path: docker-logs
#          name: docker-logs
